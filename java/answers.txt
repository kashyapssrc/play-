Class and Object excercise :

1.Consider the following class:

    public class IdentifyMyParts {

        public static int x = 7;
        public int y = 3;
    }

    - What are the class variables?
        x
    - What are the instance variables?
        y

2.What is the output from the following code:
    IdentifyMyParts.java

    IdentifyMyParts a = new IdentifyMyParts();
    IdentifyMyParts b = new IdentifyMyParts();
    a.y = 5;
    b.y = 6;
    a.x = 1;
    b.x = 2;
    System.out.println("a.y = " + a.y);
    System.out.println("b.y = " + b.y);
    System.out.println("a.x = " + a.x);
    System.out.println("b.x = " + b.x);
    System.out.println("IdentifyMyParts.x = " + IdentifyMyParts.x);

    OUTPUT :

    a.y = 5
    b.y = 6
    a.x = 2
    b.x = 2
    IdentifyMyParts.x = 2

3.What's wrong with the following program? And fix it.

    public class SomethingIsWrong {
        public static void main(String[] args) {
            Rectangle myRect;
            myRect.width = 40;
            myRect.height = 50;
            System.out.println("myRect's area is " + myRect.area());
        }
    }

    -public class name is not appropriate
    -no width and height member variables in rectangle class
    -no method name (area )


    SOLUTION :
    Rectangle.java

    public class Rectangle {

        public int width;
        public int height;

        public int area() {
            return width * height;
        }

        public static void main(String[] args) {

            Rectangle myRect = new Rectangle();
            myRect.width = 40;
            myRect.height = 50;
            System.out.println("myRect's area is " + myRect.area());
        }
    }

4.Given the following class, called NumberHolder,
    write some code that creates an instance of the class and initializes its two member variables with provided values,
    and then displays the value of each member variable.

    public class NumberHolder {

        public int anInt;
        public float aFloat;
    }

    SOLUTION:
    NumberHolder.java

5.Compile and run Class1.java. What is the output?

    OUTPUT:
    InnerClass1: getString invoked.
    InnerClass1: getAnotherString invoked.

Inner classes
=============
1.The program Problem.java doesn't compile. What do you need to do to make it compile? Why?

    SOLUTION:
    A string value is passed to int datatype so the program doesnt compile.
    the datatype is changed to string to compile Successfully .


Data type exercise:
==================
1.program to store and retrieve four boolean flags using a single int

    BooleanFlags.java


5.print the classname of all the primitive data types (Note: not the wrapper types)

    Primitive.java

6.To invert the value of a boolean, which operator would you use?

    "!" (NOT) operator
    example program : BooleanInvert.java

8.Create a program that reads an unspecified number of integer arguments from the command line and adds them together.
    For example, suppose that you enter the following: java Adder 1 3 2 10
    The program should display 16 and then exit. The program should display an error message if the user enters only one argument.

    Adder.java

9.Create a program that is similar to the previous one but instead of reading integer arguments, it reads floating-point arguments.
    It displays the sum of the arguments, using exactly two digits to the right of the decimal point.
    For example, suppose that you enter the following: java FPAdder 1 1e2 3.0 4.754
    The program would display 108.75.

    FPAdder.java

10.Change MaxVariablesDemo to show minimum values instead of maximum values. You can delete all code related to the variables aChar and aBoolean.
  What is the output?

    MinvariablesDemo.java

    OUTPUT :
    The Smallest byte value is -128.
    The Smallest short value is -32768.
    The Smallest integer value is -2147483648.
    The Smallest long value is -9223372036854775808.
    The Smallest float value is 1.4E-45.
    The Smallest double value is 4.9E-324.

Enum exercise:
==============
1.compare the enum values using equal method and == operator

    EnumCompare.java


Operators exercise:
===================
1. Change the following program to use compound assignments:

    ArithmeticDemo.java


2. In the following program, explain why the value "6" is printed twice in a row:

       class PrePostDemo {
           public static void main(String[] args){
               int i = 3;
               i++;
               System.out.println(i);    // "4"
               ++i;
               System.out.println(i);    // "5"
               System.out.println(++i);  // "6"
               System.out.println(i++);  // "6"
               System.out.println(i);    // "7"
           }
       }

    in the case of "++i" pre increment happens. i is 5in the second print statement ,
    so in the third stament it first increments and then prints the value of i (i=6)
    in the fourth print statement it first prints the value of i and then increments (i=6)


Control flow exercise:
======================
1. print fibonacci using for loop, while loop and recursion

    FibonacciSeries.java


2.Consider the following code snippet.

    if (aNumber >= 0)
        if (aNumber == 0)
            System.out.println("first string");
        else
        System.out.println("second string");
        System.out.println("third string");

    - What output do you think the code will produce if aNumber is 3?

        output :
        Second string
        third string

    Write a test program containing the previous code snippet
        - and make aNumber 3. What is the output of the program?
        - Using only spaces and line breaks, reformat the code snippet to make the control flow easier to understand.
        - Use braces, { and }, to further clarify the code.

        output:
        second string
        third string

        CodeSnippet.java


Inheritance:
===========
1. demonstrate inheritance, overloading, overriding using Animal, Dog, Cat and Snake class of objects

    OopsConcepts.java



VarArgs exercise:
================
1. demonstrate overloading with varArgs

    VarArgsOverload.java


java doc exercise:
==================

2.What methods would a class that implements the java.lang.CharSequence interface have to implement?

    It has to implement the charAt(),length(),subSequence() methods


3.What Integer method can you use to convert an int into a string that expresses the number in hexadecimal?

    Integer.toHexString(int i)

    IntToHexString.java


Interfaces:
===========
1.What methods would a class that implements the java.lang.CharSequence interface have to implement?

    It has to implement the charAt(),length(),subSequence() methods

    CharInterface.java


2.What is wrong with the following interface? and fix it.

    public interface SomethingIsWrong {
        void aMethod(int aValue){
            System.out.println("Hi Mom");
        }
    }

    An interface can only contain method signature but the above code contains method bodies.
    FIX :
    public interface PrintValue {

        void aMethod(int aValue);
    }


3.Is the following interface valid?

    public interface Marker {}

    yes it is valid.
String exercise:
================
7.Show two ways to concatenate the following two strings together to get the string "Hi, mom.":
    String hi = "Hi, ";
    String mom = "mom.";

    StringConcat.java


8.Write a program that computes your initials from your full name and displays them.

    ComputeInitial.java

